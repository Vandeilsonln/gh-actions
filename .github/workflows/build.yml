name: build-with-maven
on:
    workflow_dispatch:
    pull_request:
        branches: [main]
    push:
        branches:
            - main
env:
    GLOBAL_TEST: ${{ secrets.MY_GLOBAL_ENV }}
jobs:
    generate-jar:
        environment: homolog
        runs-on: ubuntu-latest
        container:
            image: maven:3.8.7-openjdk-18-slim
        outputs:
            script-file: ${{steps.publish_name.outputs.script-file}}
        steps:
            - name: Download Code
              uses: actions/checkout@v3

            - name: Prepare Java and Maven
              uses: ./.github/actions/prepare-java
              with:
                  java-version: 17

            - name: Build with Maven
              run: mvn -B package -Dunit.skip=true --file pom.xml

            - name: Retrieve the jar file name
              id: publish_name
              run: |
                  find target/*.jar -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'

            - name: Upload Jar
              uses: actions/upload-artifact@v3
              with:
                  name: app.jar
                  path: target/*.jar

    unit-test:
        environment: homolog
        env:
            UNIT_TEST: ${{ secrets.MY_UNIT_TEST }}
        needs: generate-jar
        runs-on: ubuntu-latest
        container:
            image: maven:3.8.7-openjdk-18-slim
        steps:
            -   name: Download Code
                uses: actions/checkout@v3

            -   name: Prepare Java and Maven
                uses: ./.github/actions/prepare-java

            -   name: Unit Tests
                run: mvn clean -B test

    integration-test:
        environment: production
        env:
            INTEGRATION_TEST: ${{ secrets.MY_INTEGRATION_TEST }}
            MYSQL_HOST: database
            MYSQL_PORT: 3306
            MYSQL_DATABASE_NAME: actions
        needs: generate-jar
        runs-on: ubuntu-latest
        container:
            image: maven:3.8.7-openjdk-18-slim
        services:
            database:
                image: mariadb:10.9.4
                ports:
                    - 3306
                env:
                    MARIADB_USER: root
                    MARIADB_ROOT_PASSWORD: root
                    MARIADB_DATABASE: actions
        steps:
            -   name: Download Code
                uses: actions/checkout@v3

            -   name: Prepare Java and Maven
                uses: ./.github/actions/prepare-java

            -   name: Integration Tests
                id: integration_test_step
                run: mvn -Dunit.skip=true clean -B verify

            -   name: upload test report
                if: failure() && steps.integration_test_step.outcome == 'failure'
                run: echo "Generating sonar cloud report"

    deploy:
        needs: [integration-test, generate-jar]
        uses: ./.github/workflows/deploy.yml
        with:
            deployable-jar: app.jar
        secrets:
            MY_GLOBAL_SECRET: ${{ secrets.MY_GLOBAL_ENV }}

    post-deploy-process:
        needs: deploy
        runs-on: ubuntu-latest
        steps:
            - name: print deploy outcome
              run: echo "${{needs.deploy.outputs.result}}"