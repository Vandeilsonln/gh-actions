name: build-with-maven
on:
    workflow_dispatch:
    pull_request:
        branches: [main]
    push:
        branches:
            - main
env:
    GLOBAL_TEST: ${{ secrets.MY_GLOBAL_ENV }}
jobs:
    generate-jar:
#        continue-on-error: true
#        strategy:
#            matrix:
#                java-version: [11, 17, 18]
        environment: homolog
        runs-on: ubuntu-latest
        outputs:
            script-file: ${{steps.publish_name.outputs.script-file}}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  distribution: 'zulu'
                  java-version: 17
                  cache: 'maven'

            - name: Build with Maven
              run: mvn -B package -Dunit.skip=true --file pom.xml

            - name: Retrieve the jar file name
              id: publish_name
              run: |
                  find target/*.jar -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'

            - name: Upload Jar
              uses: actions/upload-artifact@v3
              with:
                  name: app.jar
                  path: target/*.jar

    unit-test:
        environment: homolog
        env:
            UNIT_TEST: ${{ secrets.MY_UNIT_TEST }}
        needs: generate-jar
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   uses: actions/setup-java@v3
                with:
                    distribution: 'zulu'
                    java-version: '17'
                    cache: 'maven'
            -   name: Unit Tests
                run: mvn clean -B test

    integration-test:
        environment: production
        env:
            INTEGRATION_TEST: ${{ secrets.MY_INTEGRATION_TEST }}
        needs: generate-jar
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   uses: actions/setup-java@v3
                with:
                    distribution: 'zulu'
                    java-version: '17'
                    cache: 'maven'
            -   name: Integration Tests
                id: integration_test_step
                run: mvn -Dunit.skip=true clean -B verify

            -   name: upload test report
                if: failure() && steps.integration_test_step.outcome == 'failure'
                run: echo "Generating sonar cloud report"

    deploy:
        needs: [integration-test, generate-jar]
        uses: ./.github/workflows/deploy.yml
        with:
            deployable-jar: app.jar
        secrets:
            MY_GLOBAL_SECRET: ${{ secrets.MY_GLOBAL_ENV }}

#    deploy:
#        needs: [integration-test, generate-jar]
#        runs-on: ubuntu-latest
#        steps:
#            - name: Get Build Artifacts
#              uses: actions/download-artifact@v3
#              with:
#                  name: app.jar
#
#            - name: Output filename
#              run: echo "${{needs.generate-jar.outputs.script-file}}"
#
#            - name: deploy into server
#              run: |
#                  echo "Jar will be deployed later on"
#                  echo "GLOBAL ENV: $GLOBAL_TEST"
#                  echo "UNIT ENV: $UNIT_TEST"
#                  echo "INTEGRATION ENV: $INTEGRATION_TEST"
